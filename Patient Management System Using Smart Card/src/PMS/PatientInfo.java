package PMS;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ASH
 */
public class PatientInfo extends javax.swing.JFrame {
    
    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    public static String id = null;

    
    public PatientInfo(String ID) {
        
        /****************************/
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        /****************************/
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo.jpg")));
        
        id = ID;
        Get_Data();
        setLocationRelativeTo(null);
    }
    
    
private void Get_Data() {
    try{
        con = Connect.ConnectDB();
        
       String sql1 = "UPDATE Patient SET age = YEAR(SYSDATE()) - YEAR(dob)";
       pst = con.prepareStatement(sql1);
       pst.execute();
       con.close();
       
       
       con = Connect.ConnectDB();
    String sql = "SELECT * FROM Patient WHERE card_id = '"+id+"'";
    pst = con.prepareStatement(sql);
    rs = pst.executeQuery();
    
    if(rs.next()){
        //this.hide();
        String add = rs.getString("pname");
        name.setText(add);
        name.setEnabled(false);
        
        add = rs.getString("rname");
        fname.setText(add);
        fname.setEnabled(false);
        
        add = rs.getString("address");
        address.setText(add);
        address.setEnabled(false);
        
        add = rs.getString("martial_status");
        martial.setSelectedItem(add);
        martial.setEnabled(false);
        
        add = rs.getString("gender");
        gender.setSelectedItem(add);
        gender.setEnabled(false);
        
        add = rs.getString("age");
        age.setText(add);
        age.setEnabled(false);
        
        add = rs.getString("bg");
        bg.setSelectedItem(add);
        bg.setEnabled(false);
        
        add = rs.getString("contact");
        contact.setText(add);
        contact.setEnabled(false);
        
        add = rs.getString("emailid");
        e_id.setText(add);
        e_id.setEnabled(false);
        
        save.setEnabled(false);
        //send.setEnabled(false);
        
        
        sql = "SELECT report_name AS ' Report ' , upload_data AS 'Upload Date' FROM Report WHERE card_id = '"+id+"' ORDER BY upload_data";
        try{
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            con.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
        
    }
    }catch(Exception e){
        System.out.println("Error");
            JOptionPane.showMessageDialog(null, e);
    }
}
        /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        fname = new javax.swing.JTextField();
        age = new javax.swing.JTextField();
        contact = new javax.swing.JTextField();
        martial = new javax.swing.JComboBox();
        gender = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        address = new javax.swing.JTextPane();
        jLabel11 = new javax.swing.JLabel();
        e_id = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        bg = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        edit = new javax.swing.JButton();
        newreport = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        save = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Patient Information");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Patient Details", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel1.setToolTipText("");
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Name");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 30, -1, 20));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Address");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 116, -1, 26));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Gender");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(528, 150, -1, 23));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Age");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(529, 116, 42, 23));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Maratial Status");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(529, 33, -1, 19));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("Father's/Husband's Name   ");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 71, 186, 23));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Contact No.");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 190, 76, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel10.setText("Yrs.");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 112, -1, 30));

        name.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jPanel1.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, 180, -1));

        fname.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jPanel1.add(fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 71, 180, -1));

        age.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jPanel1.add(age, new org.netbeans.lib.awtextra.AbsoluteConstraints(657, 116, 40, -1));

        contact.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        contact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contactKeyTyped(evt);
            }
        });
        jPanel1.add(contact, new org.netbeans.lib.awtextra.AbsoluteConstraints(657, 187, 130, -1));

        martial.setBackground(new java.awt.Color(240, 240, 240));
        martial.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        martial.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<-SELECT->", "Single", "Married" }));
        martial.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                martialItemStateChanged(evt);
            }
        });
        jPanel1.add(martial, new org.netbeans.lib.awtextra.AbsoluteConstraints(657, 33, 130, -1));

        gender.setBackground(new java.awt.Color(240, 240, 240));
        gender.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        gender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<- SELECT ->", "Male", "Female", "Other" }));
        jPanel1.add(gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(657, 153, 130, -1));

        address.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        address.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addressKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(address);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 116, 180, 61));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setText("Email Id *");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 187, 76, 19));

        e_id.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        e_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_idActionPerformed(evt);
            }
        });
        e_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                e_idKeyTyped(evt);
            }
        });
        jPanel1.add(e_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 188, 180, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Blood Group");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(529, 73, -1, 21));

        bg.setBackground(new java.awt.Color(240, 240, 240));
        bg.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        bg.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<- SELECT ->", "O+", "O-", "A+", "A-", "B+", "B-", "AB+", "AB-" }));
        bg.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bgItemStateChanged(evt);
            }
        });
        jPanel1.add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(657, 74, 130, -1));

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "LAB Test Title", "Upload Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(80);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 262, 660, 120));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Patient Report Details");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 239, -1, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 222, 845, 10));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        edit.setBackground(new java.awt.Color(0, 72, 186));
        edit.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        edit.setForeground(new java.awt.Color(255, 255, 255));
        edit.setText("edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        newreport.setBackground(new java.awt.Color(0, 72, 186));
        newreport.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        newreport.setForeground(new java.awt.Color(255, 255, 255));
        newreport.setText("new report");
        newreport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newreportActionPerformed(evt);
            }
        });

        cancel.setBackground(new java.awt.Color(0, 72, 186));
        cancel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cancel.setForeground(new java.awt.Color(255, 255, 255));
        cancel.setText("cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        save.setBackground(new java.awt.Color(0, 72, 186));
        save.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        save.setForeground(new java.awt.Color(255, 255, 255));
        save.setText("save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newreport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newreport, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 392, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void newreportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newreportActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        //int response = fc.showOpenDialog(1);
        fc.showOpenDialog(null);
        File f = fc.getSelectedFile();
        String  filename = f.getAbsolutePath();
        String fname = f.getName();
        //System.out.println(name);
         //System.out.println(filename);
        File file = new File(filename);
        
        File copyfile = new File("C:\\PMS\\"+id+"\\"+fname);
        System.out.println(copyfile);
        
        
        String line;
        try{
            con = Connect.ConnectDB();
            Files.copy(file.toPath(),copyfile.toPath(),StandardCopyOption.REPLACE_EXISTING);
           
            LocalDate date = LocalDate.now();
            System.out.println(date);
           
            String sql = "INSERT INTO Report (card_id , report_name ,  upload_data ) VALUES ('"+id+"','"+fname+"','"+date+"')";
            pst = con.prepareStatement(sql);
            pst.execute();
            
            Calendar d = new GregorianCalendar();
           /* int year = d.get(Calendar.YEAR);  
            int month = d.get(Calendar.MONTH);  
            int day = d.get(Calendar.DAY_OF_MONTH); */
            String d1 = d.get(Calendar.YEAR)+"-"+(d.get(Calendar.MONTH)+1)+"-"+d.get(Calendar.DAY_OF_MONTH);
            
            Object[] row = { fname,d1};
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

             model.addRow(row);
            
            System.out.println("Success");
        
        } catch (IOException ex) {
            Logger.getLogger(PatientInfo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PatientInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    };//GEN-LAST:event_newreportActionPerformed

    private void contactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
      if (!(Character.isDigit(c)|| (c== KeyEvent.VK_BACK_SPACE)||(c==KeyEvent.VK_DELETE))){
          getToolkit().beep();
          evt.consume();
    }       
      else
          save.setEnabled(true);
    }//GEN-LAST:event_contactKeyTyped

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_cancelActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        address.setEnabled(true);
        e_id.setEnabled(true);
        bg.setEnabled(true);
        martial.setEnabled(true);
        contact.setEnabled(true);
    }//GEN-LAST:event_editActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        address.setEnabled(true);
        e_id.setEnabled(true);
        bg.setEnabled(true);
        martial.setEnabled(true);
        contact.setEnabled(true);
        
        try{
            con = Connect.ConnectDB();
            String sql = "UPDATE Patient SET address = '"+address.getText()+"', emailid = '"+e_id.getText()+"',bg = '"+bg.getSelectedItem()+"',martial_status = '"+martial.getSelectedItem()+"',contact = '"+contact.getText()+"' WHERE card_id = '"+id+"'";
            JOptionPane.showConfirmDialog(null,"Details Successfully updated ");
            pst = con.prepareStatement(sql);
            pst.execute();
            con.close();
            
            address.setEnabled(false);
            e_id.setEnabled(false);
            bg.setEnabled(false);
            martial.setEnabled(false);
            contact.setEnabled(false);
            
            save.setEnabled(false);
            
        } catch (SQLException ex) {
            JOptionPane.showConfirmDialog(null,"Error while updating","Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveActionPerformed

    private void addressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressKeyTyped
        // TODO add your handling code here:
        save.setEnabled(true);
    }//GEN-LAST:event_addressKeyTyped

    private void e_idKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_e_idKeyTyped
        // TODO add your handling code here:
        save.setEnabled(true);
    }//GEN-LAST:event_e_idKeyTyped

    private void martialItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_martialItemStateChanged
        // TODO add your handling code here:
        save.setEnabled(true);
    }//GEN-LAST:event_martialItemStateChanged

    private void bgItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bgItemStateChanged
        // TODO add your handling code here:
        save.setEnabled(true);
    }//GEN-LAST:event_bgItemStateChanged

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        Object[] options1 = { "Send", "Open","Cancel" };

        JPanel panel = new JPanel();
        panel.add(new JLabel(" What Do You Want? "));
       
        int result = JOptionPane.showOptionDialog(null, panel, null,
                JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE,
                null, options1, null);
        
        /**********************************************/
        
        if (result == JOptionPane.YES_OPTION){
           //Send Mail
                      
            int row = jTable1.getSelectedRow();
            String table_click = jTable1.getModel().getValueAt(row,0).toString();
            String filename = table_click;
            
            String mail = null;
            mail = e_id.getText();
            //System.out.println(mail);
            SendEmail send = new SendEmail();
            send.send2(filename, id , mail);
           
            
        }
        
        /*********************************************/
        
        if(result == JOptionPane.NO_OPTION){
            //Open File
                
            
                 int row = jTable1.getSelectedRow();
                 String table_click = jTable1.getModel().getValueAt(row, 0).toString();
                 String filename = table_click;
                 //System.out.println(table_click);
                 try{
                        Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler "+"C:\\PMS\\"+id+"\\"+filename);
                     }catch(Exception e){
                             JOptionPane.showMessageDialog(null," !! Error While Opening The File ");
                       }
            }
       
       
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void e_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_idActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientInfo("0000309351").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane address;
    private javax.swing.JTextField age;
    private javax.swing.JComboBox bg;
    private javax.swing.JButton cancel;
    private javax.swing.JTextField contact;
    private javax.swing.JTextField e_id;
    private javax.swing.JButton edit;
    private javax.swing.JTextField fname;
    private javax.swing.JComboBox gender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox martial;
    private javax.swing.JTextField name;
    private javax.swing.JButton newreport;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables
}
